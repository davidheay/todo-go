basePath: /api/
definitions:
  docs.HTTPError:
    properties:
      code:
        example: 400
        type: integer
      message:
        example: status bad request
        type: string
    type: object
  todo-go_internal_store_dbstore.Role:
    properties:
      id:
        type: integer
      role:
        type: string
    type: object
  todo-go_internal_store_dbstore.Todo:
    description: Todo  information
    properties:
      description:
        type: string
      done:
        type: boolean
      id:
        type: integer
    type: object
  todo-go_internal_store_dbstore.User:
    description: User  information
    properties:
      email:
        type: string
      id:
        type: integer
      roles:
        items:
          $ref: '#/definitions/todo-go_internal_store_dbstore.Role'
        type: array
    type: object
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample todo app.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Todo Web API
  version: "1.0"
paths:
  /users/{id}:
    get:
      consumes:
      - application/json
      description: Get User By Id
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/todo-go_internal_store_dbstore.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/docs.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/docs.HTTPError'
      summary: GetUserById
      tags:
      - User
  /users/{id}/todos:
    get:
      consumes:
      - application/json
      description: Add a Todo
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/todo-go_internal_store_dbstore.Todo'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/docs.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/docs.HTTPError'
      summary: Add a Todo
      tags:
      - Todo
  /users/{userId}/todos:
    get:
      consumes:
      - application/json
      description: get all Todos
      parameters:
      - description: User ID
        in: path
        name: userId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/todo-go_internal_store_dbstore.Todo'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/docs.HTTPError'
      summary: Get all Todos
      tags:
      - Todo
  /users/{userId}/todos/{todoId}:
    delete:
      consumes:
      - application/json
      description: Delete a Todo
      parameters:
      - description: Todo ID
        in: path
        name: todoId
        required: true
        type: string
      - description: User ID
        in: path
        name: userId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/docs.HTTPError'
      summary: Delete a Todo
      tags:
      - Todo
    get:
      consumes:
      - application/json
      description: get a Todo
      parameters:
      - description: Todo ID
        in: path
        name: todoId
        required: true
        type: string
      - description: User ID
        in: path
        name: userId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/todo-go_internal_store_dbstore.Todo'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/docs.HTTPError'
      summary: Get a Todo
      tags:
      - Todo
    put:
      consumes:
      - application/json
      description: Update a Todo
      parameters:
      - description: Todo ID
        in: path
        name: todoId
        required: true
        type: string
      - description: User ID
        in: path
        name: userId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/todo-go_internal_store_dbstore.Todo'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/docs.HTTPError'
      summary: Update a Todo
      tags:
      - Todo
  /users/{userId}/todos/search:
    get:
      consumes:
      - application/json
      description: Get Todos by search
      parameters:
      - description: User ID
        in: path
        name: userId
        required: true
        type: string
      - description: Title
        in: query
        name: title
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/todo-go_internal_store_dbstore.Todo'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/docs.HTTPError'
      summary: Get Todos by search
      tags:
      - Todos
securityDefinitions:
  BasicAuth:
    type: basic
swagger: "2.0"
