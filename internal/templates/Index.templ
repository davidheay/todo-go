package templates

import (
	"strconv"
	"todo-go/internal/store/dbstore"
)

templ Loader(){
	<svg aria-hidden="true" class="loader inline w-4 h-4 text-gray-200 animate-spin dark:text-gray-600 fill-blue-600" viewBox="0 0 100 101" fill="none" xmlns="http://www.w3.org/2000/svg">
		<path d="M100 50.5908C100 78.2051 77.6142 100.591 50 100.591C22.3858 100.591 0 78.2051 0 50.5908C0 22.9766 22.3858 0.59082 50 0.59082C77.6142 0.59082 100 22.9766 100 50.5908ZM9.08144 50.5908C9.08144 73.1895 27.4013 91.5094 50 91.5094C72.5987 91.5094 90.9186 73.1895 90.9186 50.5908C90.9186 27.9921 72.5987 9.67226 50 9.67226C27.4013 9.67226 9.08144 27.9921 9.08144 50.5908Z" fill="currentColor"/>
		<path d="M93.9676 39.0409C96.393 38.4038 97.8624 35.9116 97.0079 33.5539C95.2932 28.8227 92.871 24.3692 89.8167 20.348C85.8452 15.1192 80.8826 10.7238 75.2124 7.41289C69.5422 4.10194 63.2754 1.94025 56.7698 1.05124C51.7666 0.367541 46.6976 0.446843 41.7345 1.27873C39.2613 1.69328 37.813 4.19778 38.4501 6.62326C39.0873 9.04874 41.5694 10.4717 44.0505 10.1071C47.8511 9.54855 51.7191 9.52689 55.5402 10.0491C60.8642 10.7766 65.9928 12.5457 70.6331 15.2552C75.2735 17.9648 79.3347 21.5619 82.5849 25.841C84.9175 28.9121 86.7997 32.2913 88.1811 35.8758C89.083 38.2158 91.5421 39.6781 93.9676 39.0409Z" fill="currentFill"/>
	</svg>
}
templ Index(todos *[]dbstore.Todo) {
<div class="h-100 w-full flex items-center justify-center bg-teal-light dark:bg-teal-darkest font-sans" hx-ext="response-targets">
	<div class="bg-white dark:bg-gray-800 rounded shadow p-6 m-4 w-full lg:w-3/4 lg:max-w-lg">
        <div class="mb-4" >
			<form hx-post="/add-todo" hx-swap="beforeend" hx-target="#todos" hx-on::after-request="this.reset()" hx-disabled-elt="#addTodoBtn" hx-target-error="#error" hx-indicator="find .my-indicator-button">
				<div class="flex mt-4">
					<input type="text" name="description" required class="shadow appearance-none border rounded w-full py-2 px-3 mr-4 text-grey-darker focus:outline-none focus:ring-2 focus:ring-blue-600 dark:text-white dark:bg-gray-800 dark:border-gray-600" placeholder="Add Todo"/>
					<button id="addTodoBtn" class=" flex items-center w-40 justify-around text-white bg-primary-600 hover:bg-primary-700 dark:bg-primary-400 dark:hover:bg-primary-500 rounded-lg  px-5 py-2.5 text-center disabled:opacity-50 disabled:cursor-not-allowed">
						<span class="my-indicator-button">
							<span class="content">Add </span>
							@Loader()
						</span>
					</button>
			
				</div>
				<div class="flex" id="error">
				</div>
			</form>
        </div>
        <div id="todos" class="max-h-96 overflow-y-auto py-4" >
		  for _, todo := range *todos {
				if todo.Done {
					@TodoDone(&todo)
				} else{
					@Todo(&todo)
				}
			}
        </div>
    </div>
</div>
}

templ GuestIndex() {
<div class="flex items-center justify-center h-full">

	<div
		class="flex flex-col gap-1  lg:flex-row lg:gap-10 lg:max-w-5xl items-center   bg-white border border-gray-200 rounded-lg shadow-xl   dark:border-gray-700 dark:bg-gray-800">
		<img class="object-cover w-3/4 lg:w-1/3 lg:h-full rounded-t-lg " src="/static/imgs/todoList.jpg" alt="" />
		<div class="flex flex-col justify-between p-4 leading-normal lg:w-2/3 w-3/4">
			<h5 class="mb-2  text-2xl font-bold tracking-tight text-gray-900 dark:text-white">
				Todo App
			</h5>
			<p class="mb-3 font-normal text-gray-700 dark:text-gray-400">A simple app to manage your tasks</p>
			<div class="flex flex-col justify-between leading-normal lg:w-2/3 w-3/4">
				<div class="flex mt-4 md:mt-6">
					<a href="/login"
						class="inline-flex items-center px-4 py-2 text-sm font-medium text-center text-white bg-blue-700 rounded-lg hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800">Login</a>
					<a href="/register"
						class="py-2 px-4 ms-2 text-sm font-medium text-gray-900 focus:outline-none bg-white rounded-lg border border-gray-200 hover:bg-gray-100 hover:text-blue-700 focus:z-10 focus:ring-4 focus:ring-gray-100 dark:focus:ring-gray-700 dark:bg-gray-800 dark:text-gray-400 dark:border-gray-600 dark:hover:text-white dark:hover:bg-gray-700">Register</a>
				</div>
			</div>
		</div>

	</div>

</div>


}

templ ErrorAdd(){
	<div class="my-2 p-4 text-sm text-red-800 rounded-lg bg-red-50 dark:bg-gray-800 dark:text-red-400 w-full" role="alert">
		<span class="font-medium">There was an error</span> 
	</div>
}

func idToString(id uint) string{
	return  strconv.FormatUint(uint64(id), 10)
}


templ deleteTodoBtn(todo *dbstore.Todo){
	<button hx-post="delete-todo" hx-swap="delete" hx-include={"#form"+ idToString(todo.ID)} hx-target={"#todo"+ idToString(todo.ID)} type="submit" class="my-indicator-button text-white flex-no-shrink p-1 ml-4 mr-2 border-2 rounded hover:text-red-400 hover:bg-white border-red-400 bg-red-400" aria-label="Done">
		<svg class="content w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"></path></svg>
		@Loader()
	</button>
}
templ Todo(todo *dbstore.Todo){
	<div id={"todo"+idToString(todo.ID)} class="transform transition cursor-pointer hover:-translate-y-2 relative flex items-center p-2 shadow-md rounded mb-2 flex-col md:flex-row">
		<form id={"form"+idToString(todo.ID)}>
			<input type="text" value={idToString(todo.ID)} name="id" hidden/>
		</form>
		<div class="flex items-center w-full">
				<h3 class="w-full dark:text-white">{todo.Description}</h3>
				@deleteTodoBtn(todo)
				<button hx-patch="finish-todo" hx-swap="outerHTML" hx-include={"#form"+ idToString(todo.ID)} hx-target={"#todo"+ idToString(todo.ID)} type="submit"  class="my-indicator-button text-white flex-no-shrink p-1 ml-4 mr-2 border-2 rounded hover:text-green-400 hover:bg-white border-green-400 bg-green-400" aria-label="Done">
					<svg class="content w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path></svg>
					@Loader()
				</button>
			</div>
	</div>
}

templ TodoDone(todo *dbstore.Todo){
	<div id={"todo"+idToString(todo.ID)} class="transform transition cursor-pointer hover:-translate-y-2 relative flex items-center p-2 shadow-md rounded mb-2 flex-col md:flex-row">
			<form id={"form"+idToString(todo.ID)}>
				<input type="text" value={idToString(todo.ID)} name="id" hidden/>
			</form>
			<div class="flex items-center w-full">
				<h3 class="w-full line-through dark:text-white">{todo.Description}</h3>
				@deleteTodoBtn(todo)
				<button hx-patch="unfinish-todo"  hx-swap="outerHTML" hx-include={"#form"+ idToString(todo.ID)} hx-target={"#todo"+ idToString(todo.ID)} hx-target-error="#error"  class="my-indicator-button text-white flex-no-shrink p-1 ml-4 mr-2 border-2 rounded hover:text-green-400 hover:bg-white border-green-400 bg-green-400" aria-label="Done">
					<svg class="content w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18"></path></svg>
					@Loader()
				</button>
			</div>
	</div>

}